<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gsccs.b2c.plat.order.dao.ReturnOrderMapper">
	<resultMap id="BaseResultMap" type="com.gsccs.b2c.plat.order.model.ReturnOrderT">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="orderNum" property="ordernum" jdbcType="VARCHAR" />
		<result column="createReturnGoodsTime" property="createreturngoodstime"
			jdbcType="TIMESTAMP" />
		<result column="returnGoodsReason" property="returngoodsreason"
			jdbcType="VARCHAR" />
		<result column="returnGoodsStatus" property="returngoodsstatus"
			jdbcType="VARCHAR" />
		<result column="price" property="price" jdbcType="DECIMAL" />
		<result column="returnGoodsAddress" property="returngoodsaddress"
			jdbcType="VARCHAR" />
		<result column="authReturnGoodsTime" property="authreturngoodstime"
			jdbcType="TIMESTAMP" />
		<result column="authReturnGoodsExplain" property="authreturngoodsexplain"
			jdbcType="VARCHAR" />
		<result column="submitReturnGoodsFormTime" property="submitreturngoodsformtime"
			jdbcType="TIMESTAMP" />
		<result column="logisticsNum" property="logisticsnum" jdbcType="VARCHAR" />
		<result column="finishReturnGoodsTime" property="finishreturngoodstime"
			jdbcType="TIMESTAMP" />
		<result column="finishReturnGoodsExplain" property="finishreturngoodsexplain"
			jdbcType="VARCHAR" />
		<result column="createBackMoneyTime" property="createbackmoneytime"
			jdbcType="TIMESTAMP" />
		<result column="backMoneyReason" property="backmoneyreason"
			jdbcType="VARCHAR" />
		<result column="backMoneyExplain" property="backmoneyexplain"
			jdbcType="VARCHAR" />
		<result column="backMoneyStatus" property="backmoneystatus"
			jdbcType="VARCHAR" />
		<result column="img" property="img" jdbcType="VARCHAR" />
		<result column="productId" property="productid" jdbcType="BIGINT" />
		<result column="storeId" property="storeid" jdbcType="BIGINT" />
		<result column="productName" property="productname" jdbcType="VARCHAR" />
		<result column="bId" property="bid" jdbcType="BIGINT" />
		<result column="bName" property="bname" jdbcType="VARCHAR" />
		<result column="shipMethod" jdbcType="VARCHAR" property="shipmethod" />
		<result column="shipFee" jdbcType="DOUBLE" property="shipfee" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	
	
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, orderNum, createReturnGoodsTime, returnGoodsReason,
		returnGoodsStatus, price,
		returnGoodsAddress, authReturnGoodsTime, authReturnGoodsExplain,
		submitReturnGoodsFormTime,
		logisticsNum, finishReturnGoodsTime, finishReturnGoodsExplain, createBackMoneyTime,
		backMoneyReason, backMoneyExplain, backMoneyStatus, img, productId,
		storeId, productName,
		bId, bName, shipMethod, shipFee
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.gsccs.b2c.plat.order.model.ReturnOrderExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from shop_returnorder
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectPageByExample" resultMap="BaseResultMap"
		parameterType="map">
		select
		<if test="example.distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from shop_returnorder_${sid}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by ${example.orderByClause}
		</if>
		limit ${example.skip},${example.pageSize}
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from shop_returnorder_${sid}
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from shop_returnorder
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.gsccs.b2c.plat.order.model.ReturnOrderExample">
		delete from shop_returnorder
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" keyProperty="record.id" parameterType="map"
		useGeneratedKeys="true">
		insert into shop_returnorder_${sid} (id, orderNum, createReturnGoodsTime,
		returnGoodsReason, returnGoodsStatus, price,
		returnGoodsAddress, authReturnGoodsTime,
		authReturnGoodsExplain, submitReturnGoodsFormTime,
		logisticsNum, finishReturnGoodsTime,
		finishReturnGoodsExplain, createBackMoneyTime,
		backMoneyReason, backMoneyExplain, backMoneyStatus,
		img, productId, storeId,
		productName, bId, bName,
		shipMethod, shipFee)
		values (#{record.id,jdbcType=BIGINT}, #{record.ordernum,jdbcType=VARCHAR},
		#{record.createreturngoodstime,jdbcType=TIMESTAMP},
		#{record.returngoodsreason,jdbcType=VARCHAR},
		#{record.returngoodsstatus,jdbcType=VARCHAR},
		#{record.price,jdbcType=DECIMAL},
		#{record.returngoodsaddress,jdbcType=VARCHAR},
		#{record.authreturngoodstime,jdbcType=TIMESTAMP},
		#{record.authreturngoodsexplain,jdbcType=VARCHAR},
		#{record.submitreturngoodsformtime,jdbcType=TIMESTAMP},
		#{record.logisticsnum,jdbcType=VARCHAR},
		#{record.finishreturngoodstime,jdbcType=TIMESTAMP},
		#{record.finishreturngoodsexplain,jdbcType=VARCHAR},
		#{record.createbackmoneytime,jdbcType=TIMESTAMP},
		#{record.backmoneyreason,jdbcType=VARCHAR},
		#{record.backmoneyexplain,jdbcType=VARCHAR},
		#{record.backmoneystatus,jdbcType=VARCHAR},
		#{record.img,jdbcType=VARCHAR}, #{record.productid,jdbcType=BIGINT},
		#{record.storeid,jdbcType=BIGINT},
		#{record.productname,jdbcType=VARCHAR}, #{record.bid,jdbcType=BIGINT},
		#{record.bname,jdbcType=VARCHAR},
		#{record.shipmethod,jdbcType=VARCHAR},
		#{record.shipfee,jdbcType=DOUBLE}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.gsccs.b2c.plat.order.model.ReturnOrderT">
		insert into shop_returnorder
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="ordernum != null">
				orderNum,
			</if>
			<if test="createreturngoodstime != null">
				createReturnGoodsTime,
			</if>
			<if test="returngoodsreason != null">
				returnGoodsReason,
			</if>
			<if test="returngoodsstatus != null">
				returnGoodsStatus,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="returngoodsaddress != null">
				returnGoodsAddress,
			</if>
			<if test="authreturngoodstime != null">
				authReturnGoodsTime,
			</if>
			<if test="authreturngoodsexplain != null">
				authReturnGoodsExplain,
			</if>
			<if test="submitreturngoodsformtime != null">
				submitReturnGoodsFormTime,
			</if>
			<if test="logisticsnum != null">
				logisticsNum,
			</if>
			<if test="finishreturngoodstime != null">
				finishReturnGoodsTime,
			</if>
			<if test="finishreturngoodsexplain != null">
				finishReturnGoodsExplain,
			</if>
			<if test="createbackmoneytime != null">
				createBackMoneyTime,
			</if>
			<if test="backmoneyreason != null">
				backMoneyReason,
			</if>
			<if test="backmoneyexplain != null">
				backMoneyExplain,
			</if>
			<if test="backmoneystatus != null">
				backMoneyStatus,
			</if>
			<if test="img != null">
				img,
			</if>
			<if test="productid != null">
				productId,
			</if>
			<if test="storeid != null">
				storeId,
			</if>
			<if test="productname != null">
				productName,
			</if>
			<if test="bid != null">
				bId,
			</if>
			<if test="bname != null">
				bName,
			</if>
			<if test="shipmethod != null">
				shipMethod,
			</if>
			<if test="shipfee != null">
				shipFee,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="ordernum != null">
				#{ordernum,jdbcType=VARCHAR},
			</if>
			<if test="createreturngoodstime != null">
				#{createreturngoodstime,jdbcType=TIMESTAMP},
			</if>
			<if test="returngoodsreason != null">
				#{returngoodsreason,jdbcType=VARCHAR},
			</if>
			<if test="returngoodsstatus != null">
				#{returngoodsstatus,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=DECIMAL},
			</if>
			<if test="returngoodsaddress != null">
				#{returngoodsaddress,jdbcType=VARCHAR},
			</if>
			<if test="authreturngoodstime != null">
				#{authreturngoodstime,jdbcType=TIMESTAMP},
			</if>
			<if test="authreturngoodsexplain != null">
				#{authreturngoodsexplain,jdbcType=VARCHAR},
			</if>
			<if test="submitreturngoodsformtime != null">
				#{submitreturngoodsformtime,jdbcType=TIMESTAMP},
			</if>
			<if test="logisticsnum != null">
				#{logisticsnum,jdbcType=VARCHAR},
			</if>
			<if test="finishreturngoodstime != null">
				#{finishreturngoodstime,jdbcType=TIMESTAMP},
			</if>
			<if test="finishreturngoodsexplain != null">
				#{finishreturngoodsexplain,jdbcType=VARCHAR},
			</if>
			<if test="createbackmoneytime != null">
				#{createbackmoneytime,jdbcType=TIMESTAMP},
			</if>
			<if test="backmoneyreason != null">
				#{backmoneyreason,jdbcType=VARCHAR},
			</if>
			<if test="backmoneyexplain != null">
				#{backmoneyexplain,jdbcType=VARCHAR},
			</if>
			<if test="backmoneystatus != null">
				#{backmoneystatus,jdbcType=VARCHAR},
			</if>
			<if test="img != null">
				#{img,jdbcType=VARCHAR},
			</if>
			<if test="productid != null">
				#{productid,jdbcType=BIGINT},
			</if>
			<if test="storeid != null">
				#{storeid,jdbcType=BIGINT},
			</if>
			<if test="productname != null">
				#{productname,jdbcType=VARCHAR},
			</if>
			<if test="bid != null">
				#{bid,jdbcType=BIGINT},
			</if>
			<if test="bname != null">
				#{bname,jdbcType=VARCHAR},
			</if>
			<if test="shipmethod != null">
				#{shipmethod,jdbcType=VARCHAR},
			</if>
			<if test="shipfee != null">
				#{shipfee,jdbcType=DOUBLE},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="map" resultType="java.lang.Integer">
		select count(*) from shop_returnorder_${sid}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update shop_returnorder
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.ordernum != null">
				orderNum = #{record.ordernum,jdbcType=VARCHAR},
			</if>
			<if test="record.createreturngoodstime != null">
				createReturnGoodsTime =
				#{record.createreturngoodstime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.returngoodsreason != null">
				returnGoodsReason = #{record.returngoodsreason,jdbcType=VARCHAR},
			</if>
			<if test="record.returngoodsstatus != null">
				returnGoodsStatus = #{record.returngoodsstatus,jdbcType=VARCHAR},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DECIMAL},
			</if>
			<if test="record.returngoodsaddress != null">
				returnGoodsAddress = #{record.returngoodsaddress,jdbcType=VARCHAR},
			</if>
			<if test="record.authreturngoodstime != null">
				authReturnGoodsTime = #{record.authreturngoodstime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.authreturngoodsexplain != null">
				authReturnGoodsExplain =
				#{record.authreturngoodsexplain,jdbcType=VARCHAR},
			</if>
			<if test="record.submitreturngoodsformtime != null">
				submitReturnGoodsFormTime =
				#{record.submitreturngoodsformtime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.logisticsnum != null">
				logisticsNum = #{record.logisticsnum,jdbcType=VARCHAR},
			</if>
			<if test="record.finishreturngoodstime != null">
				finishReturnGoodsTime =
				#{record.finishreturngoodstime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.finishreturngoodsexplain != null">
				finishReturnGoodsExplain =
				#{record.finishreturngoodsexplain,jdbcType=VARCHAR},
			</if>
			<if test="record.createbackmoneytime != null">
				createBackMoneyTime = #{record.createbackmoneytime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.backmoneyreason != null">
				backMoneyReason = #{record.backmoneyreason,jdbcType=VARCHAR},
			</if>
			<if test="record.backmoneyexplain != null">
				backMoneyExplain = #{record.backmoneyexplain,jdbcType=VARCHAR},
			</if>
			<if test="record.backmoneystatus != null">
				backMoneyStatus = #{record.backmoneystatus,jdbcType=VARCHAR},
			</if>
			<if test="record.img != null">
				img = #{record.img,jdbcType=VARCHAR},
			</if>
			<if test="record.productid != null">
				productId = #{record.productid,jdbcType=BIGINT},
			</if>
			<if test="record.storeid != null">
				storeId = #{record.storeid,jdbcType=BIGINT},
			</if>
			<if test="record.productname != null">
				productName = #{record.productname,jdbcType=VARCHAR},
			</if>
			<if test="record.bid != null">
				bId = #{record.bid,jdbcType=BIGINT},
			</if>
			<if test="record.bname != null">
				bName = #{record.bname,jdbcType=VARCHAR},
			</if>
			<if test="record.shipmethod != null">
				shipMethod = #{record.shipmethod,jdbcType=VARCHAR},
			</if>
			<if test="record.shipfee != null">
				shipFee = #{record.shipfee,jdbcType=DOUBLE},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update shop_returnorder_${sid}
		set id = #{record.id,jdbcType=BIGINT},
		orderNum = #{record.ordernum,jdbcType=VARCHAR},
		createReturnGoodsTime = #{record.createreturngoodstime,jdbcType=TIMESTAMP},
		returnGoodsReason = #{record.returngoodsreason,jdbcType=VARCHAR},
		returnGoodsStatus = #{record.returngoodsstatus,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=DECIMAL},
		returnGoodsAddress = #{record.returngoodsaddress,jdbcType=VARCHAR},
		authReturnGoodsTime = #{record.authreturngoodstime,jdbcType=TIMESTAMP},
		authReturnGoodsExplain =
		#{record.authreturngoodsexplain,jdbcType=VARCHAR},
		submitReturnGoodsFormTime =
		#{record.submitreturngoodsformtime,jdbcType=TIMESTAMP},
		logisticsNum = #{record.logisticsnum,jdbcType=VARCHAR},
		finishReturnGoodsTime = #{record.finishreturngoodstime,jdbcType=TIMESTAMP},
		finishReturnGoodsExplain =
		#{record.finishreturngoodsexplain,jdbcType=VARCHAR},
		createBackMoneyTime =
		#{record.createbackmoneytime,jdbcType=TIMESTAMP},
		backMoneyReason = #{record.backmoneyreason,jdbcType=VARCHAR},
		backMoneyExplain = #{record.backmoneyexplain,jdbcType=VARCHAR},
		backMoneyStatus = #{record.backmoneystatus,jdbcType=VARCHAR},
		img = #{record.img,jdbcType=VARCHAR},
		productId = #{record.productid,jdbcType=BIGINT},
		storeId = #{record.storeid,jdbcType=BIGINT},
		productName = #{record.productname,jdbcType=VARCHAR},
		bId = #{record.bid,jdbcType=BIGINT},
		bName = #{record.bname,jdbcType=VARCHAR},
		shipMethod = #{record.shipmethod,jdbcType=VARCHAR},
		shipFee = #{record.shipfee,jdbcType=DOUBLE}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="map">
		update shop_returnorder
		<set>
			<if test="ordernum != null">
				orderNum = #{ordernum,jdbcType=VARCHAR},
			</if>
			<if test="createreturngoodstime != null">
				createReturnGoodsTime = #{createreturngoodstime,jdbcType=TIMESTAMP},
			</if>
			<if test="returngoodsreason != null">
				returnGoodsReason = #{returngoodsreason,jdbcType=VARCHAR},
			</if>
			<if test="returngoodsstatus != null">
				returnGoodsStatus = #{returngoodsstatus,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DECIMAL},
			</if>
			<if test="returngoodsaddress != null">
				returnGoodsAddress = #{returngoodsaddress,jdbcType=VARCHAR},
			</if>
			<if test="authreturngoodstime != null">
				authReturnGoodsTime = #{authreturngoodstime,jdbcType=TIMESTAMP},
			</if>
			<if test="authreturngoodsexplain != null">
				authReturnGoodsExplain = #{authreturngoodsexplain,jdbcType=VARCHAR},
			</if>
			<if test="submitreturngoodsformtime != null">
				submitReturnGoodsFormTime =
				#{submitreturngoodsformtime,jdbcType=TIMESTAMP},
			</if>
			<if test="logisticsnum != null">
				logisticsNum = #{logisticsnum,jdbcType=VARCHAR},
			</if>
			<if test="finishreturngoodstime != null">
				finishReturnGoodsTime = #{finishreturngoodstime,jdbcType=TIMESTAMP},
			</if>
			<if test="finishreturngoodsexplain != null">
				finishReturnGoodsExplain =
				#{finishreturngoodsexplain,jdbcType=VARCHAR},
			</if>
			<if test="createbackmoneytime != null">
				createBackMoneyTime = #{createbackmoneytime,jdbcType=TIMESTAMP},
			</if>
			<if test="backmoneyreason != null">
				backMoneyReason = #{backmoneyreason,jdbcType=VARCHAR},
			</if>
			<if test="backmoneyexplain != null">
				backMoneyExplain = #{backmoneyexplain,jdbcType=VARCHAR},
			</if>
			<if test="backmoneystatus != null">
				backMoneyStatus = #{backmoneystatus,jdbcType=VARCHAR},
			</if>
			<if test="img != null">
				img = #{img,jdbcType=VARCHAR},
			</if>
			<if test="productid != null">
				productId = #{productid,jdbcType=BIGINT},
			</if>
			<if test="storeid != null">
				storeId = #{storeid,jdbcType=BIGINT},
			</if>
			<if test="productname != null">
				productName = #{productname,jdbcType=VARCHAR},
			</if>
			<if test="bid != null">
				bId = #{bid,jdbcType=BIGINT},
			</if>
			<if test="bname != null">
				bName = #{bname,jdbcType=VARCHAR},
			</if>
			<if test="shipmethod != null">
				shipMethod = #{shipmethod,jdbcType=VARCHAR},
			</if>
			<if test="shipfee != null">
				shipFee = #{shipfee,jdbcType=DOUBLE},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="map">
		update shop_returnorder_${sid}
		set orderNum = #{record.ordernum,jdbcType=VARCHAR},
		createReturnGoodsTime = #{record.createreturngoodstime,jdbcType=TIMESTAMP},
		returnGoodsReason = #{record.returngoodsreason,jdbcType=VARCHAR},
		returnGoodsStatus = #{record.returngoodsstatus,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=DECIMAL},
		returnGoodsAddress = #{record.returngoodsaddress,jdbcType=VARCHAR},
		authReturnGoodsTime = #{record.authreturngoodstime,jdbcType=TIMESTAMP},
		authReturnGoodsExplain =
		#{record.authreturngoodsexplain,jdbcType=VARCHAR},
		submitReturnGoodsFormTime =
		#{record.submitreturngoodsformtime,jdbcType=TIMESTAMP},
		logisticsNum = #{record.logisticsnum,jdbcType=VARCHAR},
		finishReturnGoodsTime = #{record.finishreturngoodstime,jdbcType=TIMESTAMP},
		finishReturnGoodsExplain =
		#{record.finishreturngoodsexplain,jdbcType=VARCHAR},
		createBackMoneyTime =
		#{record.createbackmoneytime,jdbcType=TIMESTAMP},
		backMoneyReason = #{record.backmoneyreason,jdbcType=VARCHAR},
		backMoneyExplain = #{record.backmoneyexplain,jdbcType=VARCHAR},
		backMoneyStatus = #{record.backmoneystatus,jdbcType=VARCHAR},
		img = #{record.img,jdbcType=VARCHAR},
		productId = #{record.productid,jdbcType=BIGINT},
		storeId = #{record.storeid,jdbcType=BIGINT},
		productName = #{record.productname,jdbcType=VARCHAR},
		bId = #{record.bid,jdbcType=BIGINT},
		bName = #{record.bname,jdbcType=VARCHAR},
		shipMethod = #{record.shipmethod,jdbcType=VARCHAR},
		shipFee = #{record.shipfee,jdbcType=DOUBLE}
		where id = #{record.id,jdbcType=BIGINT}
	</update>
</mapper>
package com.gsccs.b2c.plat.buyer.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.gsccs.b2c.plat.bass.BaseExample;

public class PointsExample extends BaseExample {

	protected String orderByClause;
	protected boolean distinct;
	protected List<Criteria> oredCriteria;

	public PointsExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table buyer_points_1001
	 * 
	 * @mbggenerated Fri Jul 03 09:53:58 CST 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table buyer_points_1001
	 * 
	 * @mbggenerated Fri Jul 03 09:53:58 CST 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table buyer_points_1001
	 * 
	 * @mbggenerated Fri Jul 03 09:53:58 CST 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table buyer_points_1001
	 * 
	 * @mbggenerated Fri Jul 03 09:53:58 CST 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table buyer_points_1001
	 * 
	 * @mbggenerated Fri Jul 03 09:53:58 CST 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table buyer_points_1001
	 * 
	 * @mbggenerated Fri Jul 03 09:53:58 CST 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table buyer_points_1001
	 * 
	 * @mbggenerated Fri Jul 03 09:53:58 CST 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table buyer_points_1001
	 * 
	 * @mbggenerated Fri Jul 03 09:53:58 CST 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table buyer_points_1001
	 * 
	 * @mbggenerated Fri Jul 03 09:53:58 CST 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table buyer_points_1001
	 * 
	 * @mbggenerated Fri Jul 03 09:53:58 CST 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andOrderidIsNull() {
			addCriterion("orderid is null");
			return (Criteria) this;
		}

		public Criteria andOrderidIsNotNull() {
			addCriterion("orderid is not null");
			return (Criteria) this;
		}

		public Criteria andOrderidEqualTo(String value) {
			addCriterion("orderid =", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidNotEqualTo(String value) {
			addCriterion("orderid <>", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidGreaterThan(String value) {
			addCriterion("orderid >", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidGreaterThanOrEqualTo(String value) {
			addCriterion("orderid >=", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidLessThan(String value) {
			addCriterion("orderid <", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidLessThanOrEqualTo(String value) {
			addCriterion("orderid <=", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidLike(String value) {
			addCriterion("orderid like", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidNotLike(String value) {
			addCriterion("orderid not like", value, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidIn(List<String> values) {
			addCriterion("orderid in", values, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidNotIn(List<String> values) {
			addCriterion("orderid not in", values, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidBetween(String value1, String value2) {
			addCriterion("orderid between", value1, value2, "orderid");
			return (Criteria) this;
		}

		public Criteria andOrderidNotBetween(String value1, String value2) {
			addCriterion("orderid not between", value1, value2, "orderid");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNull() {
			addCriterion("addtime is null");
			return (Criteria) this;
		}

		public Criteria andAddtimeIsNotNull() {
			addCriterion("addtime is not null");
			return (Criteria) this;
		}

		public Criteria andAddtimeEqualTo(Date value) {
			addCriterion("addtime =", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotEqualTo(Date value) {
			addCriterion("addtime <>", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeGreaterThan(Date value) {
			addCriterion("addtime >", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeGreaterThanOrEqualTo(Date value) {
			addCriterion("addtime >=", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeLessThan(Date value) {
			addCriterion("addtime <", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeLessThanOrEqualTo(Date value) {
			addCriterion("addtime <=", value, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeIn(List<Date> values) {
			addCriterion("addtime in", values, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotIn(List<Date> values) {
			addCriterion("addtime not in", values, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeBetween(Date value1, Date value2) {
			addCriterion("addtime between", value1, value2, "addtime");
			return (Criteria) this;
		}

		public Criteria andAddtimeNotBetween(Date value1, Date value2) {
			addCriterion("addtime not between", value1, value2, "addtime");
			return (Criteria) this;
		}

		public Criteria andPointsIsNull() {
			addCriterion("points is null");
			return (Criteria) this;
		}

		public Criteria andPointsIsNotNull() {
			addCriterion("points is not null");
			return (Criteria) this;
		}

		public Criteria andPointsEqualTo(Integer value) {
			addCriterion("points =", value, "points");
			return (Criteria) this;
		}

		public Criteria andPointsNotEqualTo(Integer value) {
			addCriterion("points <>", value, "points");
			return (Criteria) this;
		}

		public Criteria andPointsGreaterThan(Integer value) {
			addCriterion("points >", value, "points");
			return (Criteria) this;
		}

		public Criteria andPointsGreaterThanOrEqualTo(Integer value) {
			addCriterion("points >=", value, "points");
			return (Criteria) this;
		}

		public Criteria andPointsLessThan(Integer value) {
			addCriterion("points <", value, "points");
			return (Criteria) this;
		}

		public Criteria andPointsLessThanOrEqualTo(Integer value) {
			addCriterion("points <=", value, "points");
			return (Criteria) this;
		}

		public Criteria andPointsIn(List<Integer> values) {
			addCriterion("points in", values, "points");
			return (Criteria) this;
		}

		public Criteria andPointsNotIn(List<Integer> values) {
			addCriterion("points not in", values, "points");
			return (Criteria) this;
		}

		public Criteria andPointsBetween(Integer value1, Integer value2) {
			addCriterion("points between", value1, value2, "points");
			return (Criteria) this;
		}

		public Criteria andPointsNotBetween(Integer value1, Integer value2) {
			addCriterion("points not between", value1, value2, "points");
			return (Criteria) this;
		}

		public Criteria andTypeIsNull() {
			addCriterion("type is null");
			return (Criteria) this;
		}

		public Criteria andTypeIsNotNull() {
			addCriterion("type is not null");
			return (Criteria) this;
		}

		public Criteria andTypeEqualTo(String value) {
			addCriterion("type =", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotEqualTo(String value) {
			addCriterion("type <>", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThan(String value) {
			addCriterion("type >", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeGreaterThanOrEqualTo(String value) {
			addCriterion("type >=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThan(String value) {
			addCriterion("type <", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLessThanOrEqualTo(String value) {
			addCriterion("type <=", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeLike(String value) {
			addCriterion("type like", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotLike(String value) {
			addCriterion("type not like", value, "type");
			return (Criteria) this;
		}

		public Criteria andTypeIn(List<String> values) {
			addCriterion("type in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotIn(List<String> values) {
			addCriterion("type not in", values, "type");
			return (Criteria) this;
		}

		public Criteria andTypeBetween(String value1, String value2) {
			addCriterion("type between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andTypeNotBetween(String value1, String value2) {
			addCriterion("type not between", value1, value2, "type");
			return (Criteria) this;
		}

		public Criteria andValidityIsNull() {
			addCriterion("validity is null");
			return (Criteria) this;
		}

		public Criteria andValidityIsNotNull() {
			addCriterion("validity is not null");
			return (Criteria) this;
		}

		public Criteria andValidityEqualTo(Date value) {
			addCriterion("validity =", value, "validity");
			return (Criteria) this;
		}

		public Criteria andValidityNotEqualTo(Date value) {
			addCriterion("validity <>", value, "validity");
			return (Criteria) this;
		}

		public Criteria andValidityGreaterThan(Date value) {
			addCriterion("validity >", value, "validity");
			return (Criteria) this;
		}

		public Criteria andValidityGreaterThanOrEqualTo(Date value) {
			addCriterion("validity >=", value, "validity");
			return (Criteria) this;
		}

		public Criteria andValidityLessThan(Date value) {
			addCriterion("validity <", value, "validity");
			return (Criteria) this;
		}

		public Criteria andValidityLessThanOrEqualTo(Date value) {
			addCriterion("validity <=", value, "validity");
			return (Criteria) this;
		}

		public Criteria andValidityIn(List<Date> values) {
			addCriterion("validity in", values, "validity");
			return (Criteria) this;
		}

		public Criteria andValidityNotIn(List<Date> values) {
			addCriterion("validity not in", values, "validity");
			return (Criteria) this;
		}

		public Criteria andValidityBetween(Date value1, Date value2) {
			addCriterion("validity between", value1, value2, "validity");
			return (Criteria) this;
		}

		public Criteria andValidityNotBetween(Date value1, Date value2) {
			addCriterion("validity not between", value1, value2, "validity");
			return (Criteria) this;
		}

		public Criteria andBuyeridIsNull() {
			addCriterion("buyerid is null");
			return (Criteria) this;
		}

		public Criteria andBuyeridIsNotNull() {
			addCriterion("buyerid is not null");
			return (Criteria) this;
		}

		public Criteria andBuyeridEqualTo(Long value) {
			addCriterion("buyerid =", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridNotEqualTo(Long value) {
			addCriterion("buyerid <>", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridGreaterThan(Long value) {
			addCriterion("buyerid >", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridGreaterThanOrEqualTo(Long value) {
			addCriterion("buyerid >=", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridLessThan(Long value) {
			addCriterion("buyerid <", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridLessThanOrEqualTo(Long value) {
			addCriterion("buyerid <=", value, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridIn(List<Long> values) {
			addCriterion("buyerid in", values, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridNotIn(List<Long> values) {
			addCriterion("buyerid not in", values, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridBetween(Long value1, Long value2) {
			addCriterion("buyerid between", value1, value2, "buyerid");
			return (Criteria) this;
		}

		public Criteria andBuyeridNotBetween(Long value1, Long value2) {
			addCriterion("buyerid not between", value1, value2, "buyerid");
			return (Criteria) this;
		}

		public Criteria andNotesIsNull() {
			addCriterion("notes is null");
			return (Criteria) this;
		}

		public Criteria andNotesIsNotNull() {
			addCriterion("notes is not null");
			return (Criteria) this;
		}

		public Criteria andNotesEqualTo(String value) {
			addCriterion("notes =", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotEqualTo(String value) {
			addCriterion("notes <>", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThan(String value) {
			addCriterion("notes >", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesGreaterThanOrEqualTo(String value) {
			addCriterion("notes >=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThan(String value) {
			addCriterion("notes <", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLessThanOrEqualTo(String value) {
			addCriterion("notes <=", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesLike(String value) {
			addCriterion("notes like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotLike(String value) {
			addCriterion("notes not like", value, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesIn(List<String> values) {
			addCriterion("notes in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotIn(List<String> values) {
			addCriterion("notes not in", values, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesBetween(String value1, String value2) {
			addCriterion("notes between", value1, value2, "notes");
			return (Criteria) this;
		}

		public Criteria andNotesNotBetween(String value1, String value2) {
			addCriterion("notes not between", value1, value2, "notes");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table buyer_points_1001
	 * 
	 * @mbggenerated do_not_delete_during_merge Fri Jul 03 09:53:58 CST 2015
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table buyer_points_1001
	 * 
	 * @mbggenerated Fri Jul 03 09:53:58 CST 2015
	 */
	public static class Criterion {
		private String condition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}
}
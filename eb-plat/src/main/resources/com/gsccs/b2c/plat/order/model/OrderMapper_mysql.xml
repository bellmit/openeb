<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gsccs.b2c.plat.order.dao.OrderMapper">
	<resultMap id="BaseResultMap" type="com.gsccs.b2c.plat.order.model.OrderT">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="serialnum" property="serialnum" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="buyerid" property="buyerid" jdbcType="BIGINT" />
		<result column="storeId" property="storeid" jdbcType="BIGINT" />

		<result column="paytype" property="paytype" jdbcType="VARCHAR" />
		<!-- 物流信息 -->
		<result column="shiptype" property="shiptype" jdbcType="VARCHAR" />
		<result column="shipfee" property="shipfee" jdbcType="DECIMAL" />
		<!-- 收货信息 -->
		<result column="telnum" property="telnum" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="consignee" property="consignee" jdbcType="VARCHAR" />
		<result column="receaddress" property="receaddress" jdbcType="VARCHAR" />
		<result column="logistnum" property="logistnum" jdbcType="VARCHAR" />
		<result column="isdelay" property="isdelay" jdbcType="VARCHAR" />
		
		<result column="ordertype" property="ordertype" jdbcType="VARCHAR" />
		<result column="isdistrib" property="isdistrib" jdbcType="VARCHAR" />
		<result column="distribfee" property="distribfee" jdbcType="DECIMAL" />
		<result column="isbilling" property="isbilling" jdbcType="VARCHAR" />
		<result column="gainscore" property="gainscore" jdbcType="INTEGER" />
		<result column="couponid" property="couponid" jdbcType="BIGINT" />
		<result column="couponfee" property="couponfee" jdbcType="DECIMAL" />
		<result column="activityid" property="activityid" jdbcType="BIGINT" />
		<result column="activityfee" property="activityfee" jdbcType="DECIMAL" />
		
		<result column="totalfee" property="totalfee" jdbcType="DECIMAL" />
		<result column="totalnum" property="totalnum" jdbcType="INTEGER" />
		
		<result column="platsource" property="platsource" jdbcType="VARCHAR" />
		<result column="addtime" property="addtime" jdbcType="TIMESTAMP" />
		<result column="lasttime" property="lasttime" jdbcType="TIMESTAMP" />
		
		<!-- 不保存数据库 -->
		<result column="buyernick" property="buyernick" jdbcType="VARCHAR" />
		<result column="storename" property="storename" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- 统计结果 -->
	<resultMap id="StatistResultMap" type="com.gsccs.b2c.plat.order.model.OrderStatist">
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="totalnum" property="totalnum" jdbcType="INTEGER" />
	</resultMap>


	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, serialnum, status, buyerid, buyernick, storeId, storename, paytype,
		telnum, phone,
		shiptype, shipfee, consignee, receaddress, ordertype, isdelay, totalfee,
		isdistrib,
		distribfee, isbilling, gainscore, couponid, couponfee, activityid, activityfee,
		totalnum,
		logistnum, platsource, addtime, lasttime
	</sql>


	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="map">
		select
		<if test="example.distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from shop_order_${sid}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by ${example.orderByClause}
		</if>
	</select>

	 <select id="selectPageByExample" resultMap="BaseResultMap"
		parameterType="map">
		select
		<if test="example.distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from shop_order_${sid}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="example.orderByClause != null">
			order by ${example.orderByClause}
		</if>
		limit ${example.skip},${example.pageSize}
	</select> 

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from shop_order_${sid}
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	
	<select id="selectByOrdersn" resultMap="BaseResultMap"
		parameterType="map">
		select
		<include refid="Base_Column_List" />
		from shop_order_${sid}
		where serialnum = #{ordersn,jdbcType=VARCHAR}
	</select>


	<delete id="deleteByPrimaryKey" parameterType="map">
		delete from shop_order_${sid}
		where id = #{id,jdbcType=BIGINT}
	</delete>
	
	<delete id="deleteByOrdersn" parameterType="map">
		delete from shop_order_${sid}
		where serialnum = #{ordersn,jdbcType=VARCHAR}
	</delete>


	<delete id="deleteByExample" parameterType="map">
		delete from shop_order_${sid}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>


	<insert id="insert" parameterType="map">
		insert into shop_order_${sid} (id, serialnum, status,
		buyerid, buyernick, storeId,
		storename, paytype, telnum,
		phone, shiptype, shipfee,
		consignee, receaddress, ordertype,
		isdelay, totalfee, isdistrib,
		distribfee, isbilling, gainscore,
		couponid, couponfee, activityid,
		activityfee, totalnum, logistnum,
		platsource, addtime, lasttime
		)
		values (#{record.id,jdbcType=BIGINT}, #{record.serialnum,jdbcType=VARCHAR},
		#{record.status,jdbcType=VARCHAR},
		#{record.buyerid,jdbcType=BIGINT}, #{record.buyernick,jdbcType=VARCHAR},
		#{record.storeid,jdbcType=BIGINT},
		#{record.storename,jdbcType=VARCHAR},
		#{record.paytype,jdbcType=VARCHAR}, #{record.telnum,jdbcType=VARCHAR},
		#{record.phone,jdbcType=VARCHAR}, #{record.shiptype,jdbcType=VARCHAR},
		#{record.shipfee,jdbcType=DECIMAL},
		#{record.consignee,jdbcType=VARCHAR},
		#{record.receaddress,jdbcType=VARCHAR},
		#{record.ordertype,jdbcType=VARCHAR},
		#{record.isdelay,jdbcType=VARCHAR},
		#{record.totalfee,jdbcType=DECIMAL},
		#{record.isdistrib,jdbcType=VARCHAR},
		#{record.distribfee,jdbcType=DECIMAL},
		#{record.isbilling,jdbcType=VARCHAR},
		#{record.gainscore,jdbcType=INTEGER},
		#{record.couponid,jdbcType=BIGINT},
		#{record.couponfee,jdbcType=DECIMAL},
		#{record.activityid,jdbcType=BIGINT},
		#{record.activityfee,jdbcType=DECIMAL},
		#{record.totalnum,jdbcType=INTEGER},
		#{record.logistnum,jdbcType=VARCHAR},
		#{record.platsource,jdbcType=VARCHAR},
		#{record.addtime,jdbcType=TIMESTAMP},
		#{record.lasttime,jdbcType=TIMESTAMP}
		)
	</insert>


	<select id="countByExample" parameterType="map" resultType="java.lang.Integer">
		select count(*) from shop_order_${sid}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>



	<update id="updateByExample" parameterType="map">
		update shop_order_${sid}
		set id = #{record.id,jdbcType=BIGINT},
		serialnum = #{record.serialnum,jdbcType=VARCHAR},
		status = #{record.status,jdbcType=VARCHAR},
		buyerid = #{record.buyerid,jdbcType=BIGINT},
		buyernick = #{record.buyernick,jdbcType=VARCHAR},
		storeId = #{record.storeid,jdbcType=BIGINT},
		storename = #{record.storename,jdbcType=VARCHAR},
		paytype = #{record.paytype,jdbcType=VARCHAR},
		telnum = #{record.telnum,jdbcType=VARCHAR},
		phone = #{record.phone,jdbcType=VARCHAR},
		shiptype = #{record.shiptype,jdbcType=VARCHAR},
		shipfee = #{record.shipfee,jdbcType=DECIMAL},
		consignee = #{record.consignee,jdbcType=VARCHAR},
		receaddress = #{record.receaddress,jdbcType=VARCHAR},
		ordertype = #{record.ordertype,jdbcType=VARCHAR},
		isdelay = #{record.isdelay,jdbcType=VARCHAR},
		totalfee = #{record.totalfee,jdbcType=DECIMAL},
		isdistrib = #{record.isdistrib,jdbcType=VARCHAR},
		distribfee = #{record.distribfee,jdbcType=DECIMAL},
		isbilling = #{record.isbilling,jdbcType=VARCHAR},
		gainscore = #{record.gainscore,jdbcType=INTEGER},
		couponid = #{record.couponid,jdbcType=BIGINT},
		couponfee = #{record.couponfee,jdbcType=DECIMAL},
		activityid = #{record.activityid,jdbcType=BIGINT},
		activityfee = #{record.activityfee,jdbcType=DECIMAL},
		totalnum = #{record.totalnum,jdbcType=INTEGER},
		logistnum = #{record.logistnum,jdbcType=VARCHAR},
		platsource = #{record.platsource,jdbcType=VARCHAR},
		addtime = #{record.addtime,jdbcType=TIMESTAMP},
		lasttime = #{record.lasttime,jdbcType=TIMESTAMP}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>


	<update id="updateByPrimaryKey" parameterType="map">
		update shop_order_${sid}
		set serialnum = #{record.serialnum,jdbcType=VARCHAR},
		status = #{record.status,jdbcType=VARCHAR},
		buyerid = #{record.buyerid,jdbcType=BIGINT},
		buyernick = #{record.buyernick,jdbcType=VARCHAR},
		storeId = #{record.storeid,jdbcType=BIGINT},
		storename = #{record.storename,jdbcType=VARCHAR},
		paytype = #{record.paytype,jdbcType=VARCHAR},
		telnum = #{record.telnum,jdbcType=VARCHAR},
		phone = #{record.phone,jdbcType=VARCHAR},
		shiptype = #{record.shiptype,jdbcType=VARCHAR},
		shipfee = #{record.shipfee,jdbcType=DECIMAL},
		consignee = #{record.consignee,jdbcType=VARCHAR},
		receaddress = #{record.receaddress,jdbcType=VARCHAR},
		ordertype = #{record.ordertype,jdbcType=VARCHAR},
		isdelay = #{record.isdelay,jdbcType=VARCHAR},
		totalfee = #{record.totalfee,jdbcType=DECIMAL},
		isdistrib = #{record.isdistrib,jdbcType=VARCHAR},
		distribfee = #{record.distribfee,jdbcType=DECIMAL},
		isbilling = #{record.isbilling,jdbcType=VARCHAR},
		gainscore = #{record.gainscore,jdbcType=INTEGER},
		couponid = #{record.couponid,jdbcType=BIGINT},
		couponfee = #{record.couponfee,jdbcType=DECIMAL},
		activityid = #{record.activityid,jdbcType=BIGINT},
		activityfee = #{record.activityfee,jdbcType=DECIMAL},
		totalnum = #{record.totalnum,jdbcType=INTEGER},
		logistnum = #{record.logistnum,jdbcType=VARCHAR},
		platsource = #{record.platsource,jdbcType=VARCHAR},
		addtime = #{record.addtime,jdbcType=TIMESTAMP},
		lasttime = #{record.lasttime,jdbcType=TIMESTAMP}
		where id = #{record.id,jdbcType=BIGINT}
		
	</update>
	
	
	<!-- 会员订单统计 -->
	<select id="orderStatistGroupState" parameterType="map" resultMap="StatistResultMap">
		select status,count(*) as totalnum,buyerid
		from shop_order_${sid}
		group by status
		having buyerid=${buyerid}
	</select>
	
	<!-- 当日新增订单数 -->
	<select id="createOrderDay" parameterType="map" resultMap="StatistResultMap">
		SELECT DATE_FORMAT(ADDTIME, '%Y%m%d') as,count(*),sum(totalnum),sum(totalfee) 
		FROM shop_order_${sid}
		group by DATE_FORMAT(ADDTIME, '%Y%m%d')
		having status='CREATE'
	</select>


	<!-- 当日新增订单数 -->
	

</mapper>
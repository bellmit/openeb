<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gsccs.b2c.plat.buyer.dao.BuyerInfoMapper">
	<resultMap id="BaseResultMap"
		type="com.gsccs.b2c.plat.buyer.model.BuyerInfo">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="nick_name" property="nickName" jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
		<result column="domicile" property="domicile" jdbcType="VARCHAR" />
		<result column="constellation" property="constellation"
			jdbcType="VARCHAR" />
		<result column="headPhoto" property="headphoto" jdbcType="VARCHAR" />
		<result column="phoneNumber" property="phonenumber" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="identityCard" property="identitycard" jdbcType="VARCHAR" />
	</resultMap>

	<!-- 查询过滤条件 -->
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<!-- 查询过滤条件 -->
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<!-- 查询条件 -->
	<sql id="Base_Column_List">
		id, nick_name, sex, birthday, domicile, constellation, headPhoto,
		phoneNumber, email, identityCard
	</sql>

	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.gsccs.b2c.plat.buyer.model.BuyerInfoExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from buyer_info_${sid}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<!-- 根据ID查询一条记录 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from buyer_info_${sid}
		where id = #{id,jdbcType=BIGINT}
	</select>
	<!-- 根据ID删除一条记录 -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from buyer_info_${sid}
		where id = #{id,jdbcType=BIGINT}
	</delete>

	<delete id="deleteByExample"
		parameterType="com.gsccs.b2c.plat.buyer.model.BuyerInfoExample">
		delete from buyer_info_${sid}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<!-- 插入一条记录 -->
	<insert id="insert" parameterType="map">
		insert into buyer_info_${sid} (id, nick_name, sex,birthday,
		domicile, constellation,headPhoto, phoneNumber, email, identityCard)
		values (#{record.id,jdbcType=BIGINT},
		#{record.nickName,jdbcType=VARCHAR}, #{record.sex,jdbcType=VARCHAR},
		#{record.birthday,jdbcType=TIMESTAMP},
		#{record.domicile,jdbcType=VARCHAR},
		#{record.constellation,jdbcType=VARCHAR},
		#{record.headphoto,jdbcType=VARCHAR},
		#{record.phonenumber,jdbcType=VARCHAR},
		#{record.email,jdbcType=VARCHAR},
		#{record.identitycard,jdbcType=VARCHAR})
	</insert>


	

	<!-- 统计总数 -->
	<select id="countByExample"
		parameterType="com.gsccs.b2c.plat.buyer.model.BuyerInfoExample"
		resultType="java.lang.Integer">
		select count(*) from buyer_info_${sid}
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>

	

	<!-- 更新一条记录 -->
	<update id="updateByExample" parameterType="map">
		update buyer_info_${sid}
		set id = #{record.id,jdbcType=BIGINT},
		nick_name = #{record.nickName,jdbcType=VARCHAR},
		sex = #{record.sex,jdbcType=VARCHAR},
		birthday = #{record.birthday,jdbcType=TIMESTAMP},
		domicile = #{record.domicile,jdbcType=VARCHAR},
		constellation = #{record.constellation,jdbcType=VARCHAR},
		headPhoto = #{record.headphoto,jdbcType=VARCHAR},
		phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		identityCard = #{record.identitycard,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	

	<!-- 根据ID更新一条记录 -->
	<update id="updateByPrimaryKey" parameterType="com.gsccs.b2c.plat.buyer.model.BuyerInfo">
		update buyer_info_${sid}
		set nick_name = #{record.nickName,jdbcType=VARCHAR},
		sex = #{record.sex,jdbcType=VARCHAR},
		birthday = #{record.birthday,jdbcType=TIMESTAMP},
		domicile = #{record.domicile,jdbcType=VARCHAR},
		constellation = #{record.constellation,jdbcType=VARCHAR},
		headPhoto = #{record.headphoto,jdbcType=VARCHAR},
		phoneNumber = #{record.phonenumber,jdbcType=VARCHAR},
		email = #{record.email,jdbcType=VARCHAR},
		identityCard = #{record.identitycard,jdbcType=VARCHAR}
		where id = #{record.id,jdbcType=BIGINT}
	</update>
	
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gsccs.b2c.plat.pay.dao.PayNoteMapper">
	<resultMap id="BaseResultMap" type="com.gsccs.eb.api.domain.trade.PayNote">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="payno" property="payno" jdbcType="VARCHAR" />
		<result column="buyerid" property="buyerid" jdbcType="BIGINT" />
		<result column="shopid" property="shopid" jdbcType="BIGINT" />
		<result column="typeid" property="typeid" jdbcType="VARCHAR" />
		<result column="orderid" property="orderid" jdbcType="BIGINT" />
		<result column="ordersn" property="ordersn" jdbcType="VARCHAR" />
		<result column="payaccount" property="payaccount" jdbcType="VARCHAR" />
		<result column="recaccount" property="recaccount" jdbcType="VARCHAR" />
		<result column="payfee" property="payfee" jdbcType="INTEGER" />
		<result column="paytime" property="paytime" jdbcType="TIMESTAMP" />
		<result column="transid" property="transid" jdbcType="VARCHAR" />
		<result column="state" property="state" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 13 
			11:22:37 CST 2016. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 13 
			11:22:37 CST 2016. -->
		id, payno, buyerid, shopid, typeid, orderid, ordersn, payaccount,
		recaccount, payfee,
		paytime, transid, state
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.gsccs.b2c.plat.pay.model.PayNoteExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from plat_pay_note
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 13 
			11:22:37 CST 2016. -->
		select
		<include refid="Base_Column_List" />
		from plat_pay_note
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 13 
			11:22:37 CST 2016. -->
		delete from plat_pay_note
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample" parameterType="com.gsccs.b2c.plat.pay.model.PayNoteExample">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 13 
			11:22:37 CST 2016. -->
		delete from plat_pay_note
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.gsccs.eb.api.domain.trade.PayNote">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 13 
			11:22:37 CST 2016. -->
		insert into plat_pay_note (id, payno, buyerid,
		shopid, typeid, orderid,
		ordersn, payaccount, recaccount,
		payfee, paytime, transid,
		state)
		values
		(#{id,jdbcType=BIGINT}, #{payno,jdbcType=VARCHAR},
		#{buyerid,jdbcType=BIGINT},
		#{shopid,jdbcType=BIGINT},
		#{typeid,jdbcType=VARCHAR}, #{orderid,jdbcType=BIGINT},
		#{ordersn,jdbcType=VARCHAR}, #{payaccount,jdbcType=VARCHAR},
		#{recaccount,jdbcType=VARCHAR},
		#{payfee,jdbcType=INTEGER},
		#{paytime,jdbcType=TIMESTAMP}, #{transid,jdbcType=VARCHAR},
		#{state,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.gsccs.eb.api.domain.trade.PayNote">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Aug 13 
			11:22:37 CST 2016. -->
		insert into plat_pay_note
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="payno != null">
				payno,
			</if>
			<if test="buyerid != null">
				buyerid,
			</if>
			<if test="shopid != null">
				shopid,
			</if>
			<if test="typeid != null">
				typeid,
			</if>
			<if test="orderid != null">
				orderid,
			</if>
			<if test="ordersn != null">
				ordersn,
			</if>
			<if test="payaccount != null">
				payaccount,
			</if>
			<if test="recaccount != null">
				recaccount,
			</if>
			<if test="payfee != null">
				payfee,
			</if>
			<if test="paytime != null">
				paytime,
			</if>
			<if test="transid != null">
				transid,
			</if>
			<if test="state != null">
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="payno != null">
				#{payno,jdbcType=VARCHAR},
			</if>
			<if test="buyerid != null">
				#{buyerid,jdbcType=BIGINT},
			</if>
			<if test="shopid != null">
				#{shopid,jdbcType=BIGINT},
			</if>
			<if test="typeid != null">
				#{typeid,jdbcType=VARCHAR},
			</if>
			<if test="orderid != null">
				#{orderid,jdbcType=BIGINT},
			</if>
			<if test="ordersn != null">
				#{ordersn,jdbcType=VARCHAR},
			</if>
			<if test="payaccount != null">
				#{payaccount,jdbcType=VARCHAR},
			</if>
			<if test="recaccount != null">
				#{recaccount,jdbcType=VARCHAR},
			</if>
			<if test="payfee != null">
				#{payfee,jdbcType=INTEGER},
			</if>
			<if test="paytime != null">
				#{paytime,jdbcType=TIMESTAMP},
			</if>
			<if test="transid != null">
				#{transid,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.gsccs.b2c.plat.pay.model.PayNoteExample"
		resultType="java.lang.Integer">
		select count(*) from plat_pay_note
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update plat_pay_note
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.payno != null">
				payno = #{record.payno,jdbcType=VARCHAR},
			</if>
			<if test="record.buyerid != null">
				buyerid = #{record.buyerid,jdbcType=BIGINT},
			</if>
			<if test="record.shopid != null">
				shopid = #{record.shopid,jdbcType=BIGINT},
			</if>
			<if test="record.typeid != null">
				typeid = #{record.typeid,jdbcType=VARCHAR},
			</if>
			<if test="record.orderid != null">
				orderid = #{record.orderid,jdbcType=BIGINT},
			</if>
			<if test="record.ordersn != null">
				ordersn = #{record.ordersn,jdbcType=VARCHAR},
			</if>
			<if test="record.payaccount != null">
				payaccount = #{record.payaccount,jdbcType=VARCHAR},
			</if>
			<if test="record.recaccount != null">
				recaccount = #{record.recaccount,jdbcType=VARCHAR},
			</if>
			<if test="record.payfee != null">
				payfee = #{record.payfee,jdbcType=INTEGER},
			</if>
			<if test="record.paytime != null">
				paytime = #{record.paytime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.transid != null">
				transid = #{record.transid,jdbcType=VARCHAR},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update plat_pay_note
		set id = #{record.id,jdbcType=BIGINT},
		payno =
		#{record.payno,jdbcType=VARCHAR},
		buyerid =
		#{record.buyerid,jdbcType=BIGINT},
		shopid =
		#{record.shopid,jdbcType=BIGINT},
		typeid =
		#{record.typeid,jdbcType=VARCHAR},
		orderid =
		#{record.orderid,jdbcType=BIGINT},
		ordersn =
		#{record.ordersn,jdbcType=VARCHAR},
		payaccount =
		#{record.payaccount,jdbcType=VARCHAR},
		recaccount =
		#{record.recaccount,jdbcType=VARCHAR},
		payfee =
		#{record.payfee,jdbcType=INTEGER},
		paytime =
		#{record.paytime,jdbcType=TIMESTAMP},
		transid =
		#{record.transid,jdbcType=VARCHAR},
		state =
		#{record.state,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.gsccs.eb.api.domain.trade.PayNote">
		update plat_pay_note
		<set>
			<if test="payno != null">
				payno = #{payno,jdbcType=VARCHAR},
			</if>
			<if test="buyerid != null">
				buyerid = #{buyerid,jdbcType=BIGINT},
			</if>
			<if test="shopid != null">
				shopid = #{shopid,jdbcType=BIGINT},
			</if>
			<if test="typeid != null">
				typeid = #{typeid,jdbcType=VARCHAR},
			</if>
			<if test="orderid != null">
				orderid = #{orderid,jdbcType=BIGINT},
			</if>
			<if test="ordersn != null">
				ordersn = #{ordersn,jdbcType=VARCHAR},
			</if>
			<if test="payaccount != null">
				payaccount = #{payaccount,jdbcType=VARCHAR},
			</if>
			<if test="recaccount != null">
				recaccount = #{recaccount,jdbcType=VARCHAR},
			</if>
			<if test="payfee != null">
				payfee = #{payfee,jdbcType=INTEGER},
			</if>
			<if test="paytime != null">
				paytime = #{paytime,jdbcType=TIMESTAMP},
			</if>
			<if test="transid != null">
				transid = #{transid,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.gsccs.eb.api.domain.trade.PayNote">
		update
		plat_pay_note
		set payno = #{payno,jdbcType=VARCHAR},
		buyerid =
		#{buyerid,jdbcType=BIGINT},
		shopid = #{shopid,jdbcType=BIGINT},
		typeid =
		#{typeid,jdbcType=VARCHAR},
		orderid = #{orderid,jdbcType=BIGINT},
		ordersn = #{ordersn,jdbcType=VARCHAR},
		payaccount =
		#{payaccount,jdbcType=VARCHAR},
		recaccount =
		#{recaccount,jdbcType=VARCHAR},
		payfee = #{payfee,jdbcType=INTEGER},
		paytime = #{paytime,jdbcType=TIMESTAMP},
		transid =
		#{transid,jdbcType=VARCHAR},
		state = #{state,jdbcType=VARCHAR}
		where id
		= #{id,jdbcType=BIGINT}
	</update>
</mapper>
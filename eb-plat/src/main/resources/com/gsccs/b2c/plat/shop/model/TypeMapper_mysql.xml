<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gsccs.b2c.plat.shop.dao.TypeMapper" >
  <resultMap id="BaseResultMap" type="com.gsccs.eb.api.domain.goods.Type" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="alias" property="alias" jdbcType="VARCHAR" />
    <result column="is_physical" property="isPhysical" jdbcType="VARCHAR" />
    <result column="use_brand" property="useBrand" jdbcType="VARCHAR" />
    <result column="use_props" property="useProps" jdbcType="VARCHAR" />
    <result column="use_params" property="useParams" jdbcType="VARCHAR" />
    <result column="use_minfo" property="useMinfo" jdbcType="VARCHAR" />
    <result column="use_floatstore" property="useFloatstore" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="orderNum" property="ordernum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, title, alias, is_physical, use_brand, use_props, use_params, use_minfo, use_floatstore, 
    state, orderNum
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gsccs.b2c.plat.shop.model.TypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eb_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectPageByExample" resultMap="BaseResultMap" parameterType="com.gsccs.b2c.plat.shop.model.TypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eb_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    limit ${skip},${pageSize}
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Mon Mar 16 15:17:19 CST 2015.
    -->
    select 
    <include refid="Base_Column_List" />
    from eb_type
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from eb_type
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gsccs.b2c.plat.shop.model.TypeExample" >
    delete from eb_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id"  parameterType="com.gsccs.eb.api.domain.goods.Type" >
    insert into eb_type (id, title, alias, 
      is_physical, use_brand, use_props, 
      use_params, use_minfo, use_floatstore, 
      state, orderNum)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{alias,jdbcType=VARCHAR}, 
      #{isPhysical,jdbcType=VARCHAR}, #{useBrand,jdbcType=VARCHAR}, #{useProps,jdbcType=VARCHAR}, 
      #{useParams,jdbcType=VARCHAR}, #{useMinfo,jdbcType=VARCHAR}, #{useFloatstore,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{ordernum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gsccs.eb.api.domain.goods.Type" >
    insert into eb_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="alias != null" >
        alias,
      </if>
      <if test="isPhysical != null" >
        is_physical,
      </if>
      <if test="useBrand != null" >
        use_brand,
      </if>
      <if test="useProps != null" >
        use_props,
      </if>
      <if test="useParams != null" >
        use_params,
      </if>
      <if test="useMinfo != null" >
        use_minfo,
      </if>
      <if test="useFloatstore != null" >
        use_floatstore,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="ordernum != null" >
        orderNum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        #{alias,jdbcType=VARCHAR},
      </if>
      <if test="isPhysical != null" >
        #{isPhysical,jdbcType=VARCHAR},
      </if>
      <if test="useBrand != null" >
        #{useBrand,jdbcType=VARCHAR},
      </if>
      <if test="useProps != null" >
        #{useProps,jdbcType=VARCHAR},
      </if>
      <if test="useParams != null" >
        #{useParams,jdbcType=VARCHAR},
      </if>
      <if test="useMinfo != null" >
        #{useMinfo,jdbcType=VARCHAR},
      </if>
      <if test="useFloatstore != null" >
        #{useFloatstore,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="ordernum != null" >
        #{ordernum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gsccs.b2c.plat.shop.model.TypeExample" resultType="java.lang.Integer" >
    select count(*) from eb_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update eb_type
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.alias != null" >
        alias = #{record.alias,jdbcType=VARCHAR},
      </if>
      <if test="record.isPhysical != null" >
        is_physical = #{record.isPhysical,jdbcType=VARCHAR},
      </if>
      <if test="record.useBrand != null" >
        use_brand = #{record.useBrand,jdbcType=VARCHAR},
      </if>
      <if test="record.useProps != null" >
        use_props = #{record.useProps,jdbcType=VARCHAR},
      </if>
      <if test="record.useParams != null" >
        use_params = #{record.useParams,jdbcType=VARCHAR},
      </if>
      <if test="record.useMinfo != null" >
        use_minfo = #{record.useMinfo,jdbcType=VARCHAR},
      </if>
      <if test="record.useFloatstore != null" >
        use_floatstore = #{record.useFloatstore,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.ordernum != null" >
        orderNum = #{record.ordernum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update eb_type
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      alias = #{record.alias,jdbcType=VARCHAR},
      is_physical = #{record.isPhysical,jdbcType=VARCHAR},
      use_brand = #{record.useBrand,jdbcType=VARCHAR},
      use_props = #{record.useProps,jdbcType=VARCHAR},
      use_params = #{record.useParams,jdbcType=VARCHAR},
      use_minfo = #{record.useMinfo,jdbcType=VARCHAR},
      use_floatstore = #{record.useFloatstore,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      orderNum = #{record.ordernum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gsccs.eb.api.domain.goods.Type" >
    update eb_type
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="alias != null" >
        alias = #{alias,jdbcType=VARCHAR},
      </if>
      <if test="isPhysical != null" >
        is_physical = #{isPhysical,jdbcType=VARCHAR},
      </if>
      <if test="useBrand != null" >
        use_brand = #{useBrand,jdbcType=VARCHAR},
      </if>
      <if test="useProps != null" >
        use_props = #{useProps,jdbcType=VARCHAR},
      </if>
      <if test="useParams != null" >
        use_params = #{useParams,jdbcType=VARCHAR},
      </if>
      <if test="useMinfo != null" >
        use_minfo = #{useMinfo,jdbcType=VARCHAR},
      </if>
      <if test="useFloatstore != null" >
        use_floatstore = #{useFloatstore,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="ordernum != null" >
        orderNum = #{ordernum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gsccs.eb.api.domain.goods.Type" >
    update eb_type
    set title = #{title,jdbcType=VARCHAR},
      alias = #{alias,jdbcType=VARCHAR},
      is_physical = #{isPhysical,jdbcType=VARCHAR},
      use_brand = #{useBrand,jdbcType=VARCHAR},
      use_props = #{useProps,jdbcType=VARCHAR},
      use_params = #{useParams,jdbcType=VARCHAR},
      use_minfo = #{useMinfo,jdbcType=VARCHAR},
      use_floatstore = #{useFloatstore,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      orderNum = #{ordernum,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>